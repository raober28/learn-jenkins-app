pipeline {
    agent any
    environment {
        REACT_APP_VERSION = "1.0.$BUILD_ID"
        AWS_DEFAULT_REGION = "eu-north-1"
    }

    stages {
        
        stage('Deploy to AWS') {
            agent {
                docker {
                    image 'amazon/aws-cli'
                    reuseNode true
                    args "-u root --entrypoint=''"
                }
            }
           
            steps {
                withCredentials([usernamePassword(credentialsId: 'my-aws', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                    sh '''
                        aws --version
                        yum --disableplugin=ovl --setopt=sslverify=false install jq -y 
                        LATEST_TD_REVISION=$(aws ecs register-task-definition --cli-input-json file://aws/task-definition-prod.json --no-verify-ssl | jq '.taskDefinition.revision')
                        echo $LATEST_TD_REVISION
                        aws ecs update-service --cluster LearnJenkinsApplication-Cluster-Prod --service LearnJenkinsApplication-Service-Prod --task-definition LearnJenkinsApplication-TaskDefinition-Prod:$LATEST_TD_REVISION --no-verify-ssl
                        aws ecs wait services-stable --cluster LearnJenkinsApplication-Cluster-Prod --services LearnJenkinsApplication-Service-Prod --no-verify-ssl
                '''
                }
                
            }
        }

        stage('Build') {
            agent {
                docker {
                    image 'node:18'
                    reuseNode true
                }
            }
            steps {
                 sh '''
                    
                    echo "Small Change"
                    echo "Listing files"
                    ls -la

                    echo "Node version:"
                    node --version

                    echo "NPM version:"
                    npm --version

                    echo "Using cached NPM directory: $NPM_CACHE_DIR"
                    echo "cache=$NPM_CACHE_DIR" > .npmrc
                    echo "strict-ssl=false" >> .npmrc

                    echo "Installing dependencies..."
                    npm install --unsafe-perm

                    echo "Building the app..."
                    npx react-scripts build

                    echo "Listing output..."
                    ls -la
                '''
            }
        }

        
       

    }

    
}