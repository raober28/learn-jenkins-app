pipeline {
    agent any
    environment {
        NPM_CACHE_DIR = "${WORKSPACE}/.npm-cache"
        NODE_MODULES_DIR = "${WORKSPACE}/node_modules"

        NETLIFY_SITE_ID = 'be3ad705-eced-46af-bda0-6671b00588e4'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
        REACT_APP_VERSION = "1.0.$BUILD_ID"
    }

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:18'
                    reuseNode true
                }
            }
            steps {
                 sh '''
                    
                    echo "Small Change"
                    echo "Listing files"
                    ls -la

                    echo "Node version:"
                    node --version

                    echo "NPM version:"
                    npm --version

                    echo "Using cached NPM directory: $NPM_CACHE_DIR"
                    echo "cache=$NPM_CACHE_DIR" > .npmrc
                    echo "strict-ssl=false" >> .npmrc

                    echo "Installing dependencies..."
                    npm install --unsafe-perm

                    echo "Building the app..."
                    npx react-scripts build

                    echo "Listing output..."
                    ls -la
                '''
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit Tests') {
                    agent {
                        docker {
                            image 'node:18'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            test -f build/index.html
                            npm test
                        '''
                    }
                    post {
                        always {
                            junit 'jest-results/junit.xml'
                        }
                    }
                }

                stage('E2E') {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            npm install serve
                            ./node_modules/.bin/serve -s build &
                            echo "Waiting for the server to start..."
                            sleep 5
                            npx playwright test  --reporter=html
                        '''
                    }
                    post {
                        always {
                            publishHTML([
                                allowMissing: false,
                                alwaysLinkToLastBuild: false,
                                icon: '',
                                keepAll: false,
                                reportDir: 'playwright-report',
                                reportFiles: 'index.html',
                                reportName: 'Playwright Local',
                                reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
                }

            }
        }

         stage('Deploy Staging') {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                            args '-u 0'
                        }
                    }
                    environment {
                        CI_ENVIRONMENT_URL =  'STAGING_URL_TO_BE_SET'
                    }
                    steps {
                        sh '''
                            npm config set strict-ssl false
                            npm config set ca ""
                            export NODE_TLS_REJECT_UNAUTHORIZED=0

                            echo "Installing Netlify CLI globally"
                            npm install -g --unsafe-perm netlify-cli 
                            npm install  node-jq

                            echo "Running Netlify deploy..."
                            netlify --version
                            netlify status
                            netlify deploy --dir=build --json > deploy-output.json
                            CI_ENVIRONMENT_URL=$(node_modules/.bin/node-jq -r '.deploy_url' deploy-output.json)
                            npx playwright test  --reporter=html
                        '''
                    }
                    post {
                        always {
                            publishHTML([
                                allowMissing: false,
                                alwaysLinkToLastBuild: false,
                                icon: '',
                                keepAll: false,
                                reportDir: 'playwright-report',
                                reportFiles: 'index.html',
                                reportName: 'Staging E2E',
                                reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
        }
       

        stage('Deploy Prod') {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                             args '-u 0'
                        }
                    }
                    environment {
                     CI_ENVIRONMENT_URL =  'https://meek-selkie-bf2e9f.netlify.app'
                    }
                    steps {
                        sh '''
                            npm config set strict-ssl false
                            npm config set ca ""
                            export NODE_TLS_REJECT_UNAUTHORIZED=0

                            echo "Installing Netlify CLI globally"
                            npm install -g --unsafe-perm netlify-cli

                            echo "Running Netlify deploy..."
                            netlify --version
                            netlify status
                            netlify deploy --dir=build --prod
                            npx playwright test  --reporter=html
                        '''
                    }
                    post {
                        always {
                            publishHTML([
                                allowMissing: false,
                                alwaysLinkToLastBuild: false,
                                icon: '',
                                keepAll: false,
                                reportDir: 'playwright-report',
                                reportFiles: 'index.html',
                                reportName: 'Prod E2E',
                                reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
        }

        
    }

    
}